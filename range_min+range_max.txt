/* Code to implement range-min and range-max simultaneously using segment trees.
   Returns value as well as index of maximum and minimum value 
   
   I have built two segment trees - one for range-max and other for range-min
   
*/   
  

int arr[N];

struct seg{   // Defining node of segment tree

    int val;    
    int index;
    
};

struct seg faltoomax,faltoomin;    // For invalid ranges



struct seg maxtree[600020],mintree[600020];

void build_maxtree(int node,int a,int b){

    if(a>b)  return;

    if(a==b){

         maxtree[node].val=arr[a];
         maxtree[node].index=a;
         return;
    }

    build_maxtree(node*2,a,(a+b)/2);
    build_maxtree(node*2+1,(a+b)/2+1,b); 

    if(maxtree[node*2].val>=maxtree[node*2+1].val){

        maxtree[node].val=maxtree[node*2].val;
        maxtree[node].index=maxtree[node*2].index;
  

    } 

    else{

         maxtree[node].val=maxtree[node*2+1].val;
         maxtree[node].index=maxtree[node*2+1].index;
    }

}

void build_mintree(int node,int a,int b){

    if(a>b)  return;

    if(a==b){

         mintree[node].val=arr[a];
         mintree[node].index=a;
         return;
    }

    build_mintree(node*2,a,(a+b)/2);
    build_mintree(node*2+1,(a+b)/2+1,b); 

    if(mintree[node*2].val<=mintree[node*2+1].val){

        mintree[node].val=mintree[node*2].val;
        mintree[node].index=mintree[node*2].index;
  

    } 

    else{

         mintree[node].val=mintree[node*2+1].val;
         mintree[node].index=mintree[node*2+1].index;
  
        

    }

}

struct seg range_max(int node,int a,int b,int i,int j){

    if(a>b || a>j || b<i) return faltoomax;

    if(a>=i && b<=j)
    	 return maxtree[node];

    struct seg q1=range_max(node*2,a,(a+b)/2,i,j);
    struct seg q2=range_max(node*2+1,(a+b)/2+1,b,i,j);

    if(q1.val>=q2.val)
    	return q1;

    else
        return q2;


}

struct seg range_min(int node,int a,int b,int i,int j){

    if(a>b || a>j || b<i) return faltoomin;

    if(a>=i && b<=j)
    	 return mintree[node];

    struct seg q1=range_min(node*2,a,(a+b)/2,i,j);
    struct seg q2=range_min(node*2+1,(a+b)/2+1,b,i,j);

    if(q1.val<=q2.val)
    	return q1;

    else
        return q2;
}
